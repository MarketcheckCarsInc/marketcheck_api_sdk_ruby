=begin
#Marketcheck Cars API

#<b>Access the New, Used and Certified cars inventories for all Car Dealers in US.</b> <br/>The data is sourced from online listings by over 44,000 Car dealers in US. At any time, there are about 6.2M searchable listings (about 1.9M unique VINs) for Used & Certified cars and about 6.6M (about 3.9M unique VINs) New Car listings from all over US. We use this API at the back for our website <a href='https://www.marketcheck.com' target='_blank'>www.marketcheck.com</a> and our Android and iOS mobile apps too.<br/><h5> Few useful links : </h5><ul><li>A quick view of the API and the use cases is depicated <a href='https://portals.marketcheck.com/mcapi/' target='_blank'>here</a></li><li>The Postman collection with various usages of the API is shared here https://www.getpostman.com/collections/2752684ff636cdd7bac2</li></ul>

OpenAPI spec version: 1.0.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'uri'

module Marketcheck_api_sdk
  class InventoryApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Dealer inventory
    # Get a dealer's currently active inventory
    # @param dealer_id Id representing the dealer to fetch the active inventory for
    # @param [Hash] opts the optional parameters
    # @option opts [String] :api_key The API Authentication Key. Mandatory with all API calls.
    # @option opts [String] :rows Number of results to return. Default is 10. Max is 50
    # @option opts [String] :start Page number to fetch the results for the given criteria. Default is 1. Pagination is allowed only till first 1000 results for the search and sort criteria. The page value can be only between 1 to 1000/rows
    # @return [BaseListing]
    def get_dealer_active_inventory(dealer_id, opts = {})
      data, _status_code, _headers = get_dealer_active_inventory_with_http_info(dealer_id, opts)
      data
    end

    # Dealer inventory
    # Get a dealer&#39;s currently active inventory
    # @param dealer_id Id representing the dealer to fetch the active inventory for
    # @param [Hash] opts the optional parameters
    # @option opts [String] :api_key The API Authentication Key. Mandatory with all API calls.
    # @option opts [String] :rows Number of results to return. Default is 10. Max is 50
    # @option opts [String] :start Page number to fetch the results for the given criteria. Default is 1. Pagination is allowed only till first 1000 results for the search and sort criteria. The page value can be only between 1 to 1000/rows
    # @return [Array<(BaseListing, Fixnum, Hash)>] BaseListing data, response status code and response headers
    def get_dealer_active_inventory_with_http_info(dealer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_dealer_active_inventory ...'
      end
      # verify the required parameter 'dealer_id' is set
      if @api_client.config.client_side_validation && dealer_id.nil?
        fail ArgumentError, "Missing the required parameter 'dealer_id' when calling InventoryApi.get_dealer_active_inventory"
      end
      # resource path
      local_var_path = '/dealer/{dealer_id}/active/inventory'.sub('{' + 'dealer_id' + '}', dealer_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'api_key'] = opts[:'api_key'] if !opts[:'api_key'].nil?
      query_params[:'rows'] = opts[:'rows'] if !opts[:'rows'].nil?
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BaseListing')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_dealer_active_inventory\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Dealer's historical inventory
    # [v1 : Not Implemented Yet] - Get a dealer's historical inventory
    # @param dealer_id Id representing the dealer to fetch the active inventory for
    # @param [Hash] opts the optional parameters
    # @return [BaseListing]
    def get_dealer_historical_inventory(dealer_id, opts = {})
      data, _status_code, _headers = get_dealer_historical_inventory_with_http_info(dealer_id, opts)
      data
    end

    # Dealer&#39;s historical inventory
    # [v1 : Not Implemented Yet] - Get a dealer&#39;s historical inventory
    # @param dealer_id Id representing the dealer to fetch the active inventory for
    # @param [Hash] opts the optional parameters
    # @return [Array<(BaseListing, Fixnum, Hash)>] BaseListing data, response status code and response headers
    def get_dealer_historical_inventory_with_http_info(dealer_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: InventoryApi.get_dealer_historical_inventory ...'
      end
      # verify the required parameter 'dealer_id' is set
      if @api_client.config.client_side_validation && dealer_id.nil?
        fail ArgumentError, "Missing the required parameter 'dealer_id' when calling InventoryApi.get_dealer_historical_inventory"
      end
      # resource path
      local_var_path = '/dealer/{dealer_id}/historical/inventory'.sub('{' + 'dealer_id' + '}', dealer_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BaseListing')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: InventoryApi#get_dealer_historical_inventory\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
